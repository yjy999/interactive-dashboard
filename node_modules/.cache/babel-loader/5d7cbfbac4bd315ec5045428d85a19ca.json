{"remainingRequest":"C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue","mtime":1671028687309},{"path":"C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671028697199},{"path":"C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1671028696531},{"path":"C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671028697199},{"path":"C:\\Users\\13089\\Desktop\\可视化\\interactive dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1671028778473}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy8xMzA4OS9EZXNrdG9wL1x1NTNFRlx1ODlDNlx1NTMxNi9pbnRlcmFjdGl2ZSBkYXNoYm9hcmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1VzZXJzLzEzMDg5L0Rlc2t0b3AvXHU1M0VGXHU4OUM2XHU1MzE2L2ludGVyYWN0aXZlIGRhc2hib2FyZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXV0b1Jlc2l6ZSBmcm9tICcuLi8uLi8uLi9taXhpbi9hdXRvUmVzaXplJzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZEZWNvcmF0aW9uMycsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgcG9pbnRTaWRlTGVuZ3RoID0gNzsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2RlY29yYXRpb24tMycsCiAgICAgIHN2Z1dIOiBbMzAwLCAzNV0sCiAgICAgIHN2Z1NjYWxlOiBbMSwgMV0sCiAgICAgIHJvd051bTogMiwKICAgICAgcm93UG9pbnRzOiAyNSwKICAgICAgcG9pbnRTaWRlTGVuZ3RoOiBwb2ludFNpZGVMZW5ndGgsCiAgICAgIGhhbGZQb2ludFNpZGVMZW5ndGg6IHBvaW50U2lkZUxlbmd0aCAvIDIsCiAgICAgIHBvaW50czogW10sCiAgICAgIGRlZmF1bHRDb2xvcjogWycjN2FjYWVjJywgJ3RyYW5zcGFyZW50J10sCiAgICAgIG1lcmdlZENvbG9yOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb2xvcjogZnVuY3Rpb24gY29sb3IoKSB7CiAgICAgIHZhciBtZXJnZUNvbG9yID0gdGhpcy5tZXJnZUNvbG9yOwogICAgICBtZXJnZUNvbG9yKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQ6IGZ1bmN0aW9uIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdCgpIHsKICAgICAgdmFyIGNhbGNTVkdEYXRhID0gdGhpcy5jYWxjU1ZHRGF0YTsKICAgICAgY2FsY1NWR0RhdGEoKTsKICAgIH0sCiAgICBjYWxjU1ZHRGF0YTogZnVuY3Rpb24gY2FsY1NWR0RhdGEoKSB7CiAgICAgIHZhciBjYWxjUG9pbnRzUG9zaXRpb24gPSB0aGlzLmNhbGNQb2ludHNQb3NpdGlvbiwKICAgICAgICAgIGNhbGNTY2FsZSA9IHRoaXMuY2FsY1NjYWxlOwogICAgICBjYWxjUG9pbnRzUG9zaXRpb24oKTsKICAgICAgY2FsY1NjYWxlKCk7CiAgICB9LAogICAgY2FsY1BvaW50c1Bvc2l0aW9uOiBmdW5jdGlvbiBjYWxjUG9pbnRzUG9zaXRpb24oKSB7CiAgICAgIHZhciBzdmdXSCA9IHRoaXMuc3ZnV0gsCiAgICAgICAgICByb3dOdW0gPSB0aGlzLnJvd051bSwKICAgICAgICAgIHJvd1BvaW50cyA9IHRoaXMucm93UG9pbnRzOwoKICAgICAgdmFyIF9zdmdXSCA9IF9zbGljZWRUb0FycmF5KHN2Z1dILCAyKSwKICAgICAgICAgIHcgPSBfc3ZnV0hbMF0sCiAgICAgICAgICBoID0gX3N2Z1dIWzFdOwoKICAgICAgdmFyIGhvcml6b250YWxHYXAgPSB3IC8gKHJvd1BvaW50cyArIDEpOwogICAgICB2YXIgdmVydGljYWxHYXAgPSBoIC8gKHJvd051bSArIDEpOwogICAgICB2YXIgcG9pbnRzID0gbmV3IEFycmF5KHJvd051bSkuZmlsbCgwKS5tYXAoZnVuY3Rpb24gKGZvbywgaSkgewogICAgICAgIHJldHVybiBuZXcgQXJyYXkocm93UG9pbnRzKS5maWxsKDApLm1hcChmdW5jdGlvbiAoZm9vLCBqKSB7CiAgICAgICAgICByZXR1cm4gW2hvcml6b250YWxHYXAgKiAoaiArIDEpLCB2ZXJ0aWNhbEdhcCAqIChpICsgMSldOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy5wb2ludHMgPSBwb2ludHMucmVkdWNlKGZ1bmN0aW9uIChhbGwsIGl0ZW0pIHsKICAgICAgICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShhbGwpLCBfdG9Db25zdW1hYmxlQXJyYXkoaXRlbSkpOwogICAgICB9LCBbXSk7CiAgICB9LAogICAgY2FsY1NjYWxlOiBmdW5jdGlvbiBjYWxjU2NhbGUoKSB7CiAgICAgIHZhciB3aWR0aCA9IHRoaXMud2lkdGgsCiAgICAgICAgICBoZWlnaHQgPSB0aGlzLmhlaWdodCwKICAgICAgICAgIHN2Z1dIID0gdGhpcy5zdmdXSDsKCiAgICAgIHZhciBfc3ZnV0gyID0gX3NsaWNlZFRvQXJyYXkoc3ZnV0gsIDIpLAogICAgICAgICAgdyA9IF9zdmdXSDJbMF0sCiAgICAgICAgICBoID0gX3N2Z1dIMlsxXTsKCiAgICAgIHRoaXMuc3ZnU2NhbGUgPSBbd2lkdGggLyB3LCBoZWlnaHQgLyBoXTsKICAgIH0sCiAgICBvblJlc2l6ZTogZnVuY3Rpb24gb25SZXNpemUoKSB7CiAgICAgIHZhciBjYWxjU1ZHRGF0YSA9IHRoaXMuY2FsY1NWR0RhdGE7CiAgICAgIGNhbGNTVkdEYXRhKCk7CiAgICB9LAogICAgbWVyZ2VDb2xvcjogZnVuY3Rpb24gbWVyZ2VDb2xvcigpIHsKICAgICAgdmFyIGNvbG9yID0gdGhpcy5jb2xvciwKICAgICAgICAgIGRlZmF1bHRDb2xvciA9IHRoaXMuZGVmYXVsdENvbG9yOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIG1lcmdlQ29sb3IgPSB0aGlzLm1lcmdlQ29sb3I7CiAgICBtZXJnZUNvbG9yKCk7CiAgfQp9Ow=="},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-decoration-3\" :ref=\"ref\">\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\n\n      <template\n        v-for=\"(point, i) in points\"\n      >\n        <rect\n          :key=\"i\"\n          :fill=\"mergedColor[0]\"\n          :x=\"point[0] - halfPointSideLength\"\n          :y=\"point[1] - halfPointSideLength\"\n          :width=\"pointSideLength\"\n          :height=\"pointSideLength\"\n        >\n          <animate\n            v-if=\"Math.random() > 0.6\"\n            attributeName=\"fill\"\n            :values=\"`${mergedColor.join(';')}`\"\n            :dur=\"Math.random() + 1 + 's'\"\n            :begin=\"Math.random() * 2\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n      </template>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration3',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    const pointSideLength = 7\n\n    return {\n      ref: 'decoration-3',\n\n      svgWH: [300, 35],\n\n      svgScale: [1, 1],\n\n      rowNum: 2,\n      rowPoints: 25,\n\n      pointSideLength,\n      halfPointSideLength: pointSideLength / 2,\n\n      points: [],\n\n      defaultColor: ['#7acaec', 'transparent'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { calcPointsPosition, calcScale } = this\n\n      calcPointsPosition()\n\n      calcScale()\n    },\n    calcPointsPosition () {\n      const { svgWH, rowNum, rowPoints } = this\n\n      const [w, h] = svgWH\n\n      const horizontalGap = w / (rowPoints + 1)\n      const verticalGap = h / (rowNum + 1)\n\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\n        new Array(rowPoints).fill(0).map((foo, j) => [\n          horizontalGap * (j + 1), verticalGap * (i + 1)\n        ]))\n\n      this.points = points.reduce((all, item) => [...all, ...item], [])\n    },\n    calcScale () {\n      const { width, height, svgWH } = this\n\n      const [w, h] = svgWH\n\n      this.svgScale = [width / w, height / h]\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration3/src"}]}